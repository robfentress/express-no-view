<!doctype html>
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>ARIA Dialogs - Apex 4X Technical Style Guide</title>
    <meta name="description" content="Scalable ARIA Components">
    <meta name="Author" content="Bryan Garaventa" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="../_common/_doc_files/css/global.css">
    <link rel="stylesheet" type="text/css" href="../_common/_doc_files/prism.css">
    <link rel="stylesheet" type="text/css" href="../_common/_doc_files/css/components-style.css">
    <script src="../_common/_doc_files/prism.js"></script>
</head>

<body>
    <div class="outer-wrapper">
        <header class="header">
            <div class="logo">
                <a href="http://whatsock.com">
                    <img alt="WhatSock : Changing the world one step at a time" src="/Templates/_common/_doc_files/img/whatsock.svg">
                </a>
            </div>
            <nav class="navigation--parent">
                <h2 class="parent--page">Test Pages</h2>
                <ul>
                    <li><a href="../index.htm">Back to Components</a></li>
                    <li><a href="External/index.htm">External</a></li>
                    <li><a href="External - Alert (Session Timeout)/index.htm">External - Alert (Session Timeout)</a></li>
                    <li><a href="External - Straylight/index.htm">External - Straylight</a></li>
                    <li><a href="Internal/index.htm">Internal</a></li>
                    <li><a href="Internal - Alert/index.htm">Internal - Alert</a></li>
                    <li><a href="Internal - Alert (Session Timeout)/index.htm">Internal - Alert (Session Timeout)</a></li>
                    <li><a href="Internal - Straylight/index.htm">Internal - Straylight</a></li>
                </ul>
            </nav>
        </header>
        <div class="wrapper">
            <main id="main" class="main">
                <h1><strong>ARIA Dialogs</strong> </h1>

                <section class="section--instructions">

                    <h2>Expected behaviors</h2>

                    <p>Move focus into the dialog when it is rendered, ensure that the background content is hidden from screen reader users, ensure that the beginning and ending boundaries are conveyed to screen reader users, make sure the dialog can be closed from the keyboard, ensure that circular tabbing confines keyboard focus within the dialog content, and move focus back to the triggering element after the dialog is removed.</p>

                    <p>The 4X ARIA Dialog module automatically configures all required ARIA attributes and focus handling, in strict accordance with the ARIA specification.</p>

                    <p>The following attributes are handled automatically by the Dialog module:</p>

                    <ul>
                        <li> role=dialog/alertdialog</li>
                        <li> aria-label</li>
                        <li> aria-hidden</li>
                        <li> inert</li>
                    </ul>

                    <p>Available attributes for the triggering element:</p>

                    <ul>
                        <li> data-controls : The resource path and pointer to the ID attribute of the dialog container element.</li>
                    </ul>

                    <h2>JavaScript syntax</h2>

                    <div>
                        <pre><code class="language-javascript">var myDialogDC = $A.setDialog( domNodeOrCSSSelectorForTriggeringElement , {
// Configure functionality key / value mappings
});</code></pre>
                    </div>

                    <h2>Parameters</h2>

                    <ol>
                        <li>A DOM element or CSS selector to specify the triggering element</li>
                        <li>A configuration map to customize behaviors and options</li>
                    </ol>

                    <p>If there is no triggering element, the configuration map can be passed as the first parameter.</p>

                    <h3>Configuration</h3>

                    <div>
                        <pre><code class="language-javascript">{

// Optionally set a unique ID for the dialog DC object, which can be referenced through $A('uniqueId')
// If not specified, the id of the triggering element will be used instead.
id: 'uniqueId',

// Optionally specify the content to be rendered when referencing internal content.
// May be a DOM node or CSS selector.
// Not necessary if data-controls is set on the triggering element.
content: "#uniqueId",

// Optionally specify the content to be rendered when referencing external content.
// Not necessary if data-controls is set on the triggering element.
// If set, the content property will be auto-populated with the returned content.
fetch: {
url: "path/file.htm",
data: {
selector: "#uniqueId"
}
},

// Set the class name for the top level container element
className: 'dialog',

// Set the class name for the screen reader accessible close link
// This must match the class name for any close links or buttons within the dialog content, which will cause close event binding to automatically occur when the content is rendered.
closeClassName: "CloseDC",

// Optionally specify if the dialog is an alert message.
// If true, a system alert will be fired when the dialog is rendered.
isAlert: false,

// Specify if the dialog is a modal dialog.
// If true, the background content will be hidden from screen reader users.
isModal: true,

// Optionally run a script after the dialog finishes rendering.
afterRender: function(DC) {
// DC.container includes the rendered dialog content.
},

// Optionally run a script after the dialog is removed.
afterRemove: function(DC) {
// Do something.
},

// Optionally specify a delay in milliseconds to wait before rendering the dialog after the triggering element is activated.
delay: 0,

// Optionally specify a timeout length in milliseconds, after which the dialog will automatically close.
delayTimeout: 0,

// Optionally override the default timeout function that occurs after the delayTimeout length is reached.
timeout: function(dc) {
dc.remove();
},

// Optionally specify a render and remove animation effect for the dialog.
// Requires the "Animate" module import to function, which is powered by Velocity.js.
// To ignore animation effects, delete the animate object declaration entirely from the setup script.
// View implementations within "Templates/Dialogs" for practical animation usage examples.

style: { display: "none" }, // Set the initial state to hidden in prep for animation.

animate: {

onRender: function(dc, wrapper, next) {

// Specify the render animation effect, including the callback function statement to execute when the animation effect completes.
Velocity(wrapper, "transition.TYPE", {
// Velocity options here, plus the callback declaration after the animation completes.
complete: function() {
next(); // REQUIRED: next() must be executed so control is passed back to 4X for rendering.
}
});

},

onRemove: function(dc, wrapper, next) {

// Specify the removal animation effect, including the callback function statement to execute when the animation effect completes.
Velocity(wrapper, "transition.TYPE", {
// Velocity options here, plus the callback declaration after the animation completes.
complete: function() {
next(); // REQUIRED: next() must be executed so control is passed back to 4X for removal.
}
});

}

}

// Additional DC API properties and methods can be declared here also to customize functionality and behavior.
// To view available options, reference the help docs located at: "Help/DC API/DC Object Configuration"

}</code></pre>
                    </div>

                    <h2>Programmatic control</h2>

                    <div>
                        <pre><code class="language-javascript">// Get the DC object for the dialog using its id.
var DC = $A("dialogId");

// Open the dialog manually.
DC.render(function() {
// Optionally do something after rendering completes.
});

// Close the dialog manually.
DC.remove(function() {
// Optionally do something after removal completes.
});

// Additional DC API properties and methods can be applied here as well.
// To view available options, reference the help docs located at: "Help/DC API/DC Object Properties and Methods"</code></pre>
                    </div>

                </section>
            </main>
        </div>
        <footer class="footer">
            <div class="flex-container-row">
                <div class="flex-item">
                    <h2>License</h2>
                    <p>
                        Apex 4X including all template design patterns is distributed under the terms of the Open Source Initiative OSI - MIT License, and may be freely used for any purpose within any web technology.
                    </p>
                </div>
                <div class="flex-item">
                    <h2>Resources</h2>
                    <ul>
                        <li>
                            <a target="ext" href="https://github.com/WhatSock/apex">Apex 4X on GitHub</a>
                        </li>
                        <li>
                            <a target="ext" href="http://whatsock.com/training/matrices/visual-aria.htm">Visual ARIA Bookmarklet</a>
                        </li>
                        <li>
                            <a target="ext" href="https://chrome.google.com/webstore/detail/visual-aria/lhbmajchkkmakajkjenkchhnhbadmhmk">Visual ARIA Chrome Extension</a>
                        </li>
                        <li>
                            <a target="ext" href="https://addons.mozilla.org/en-US/firefox/addon/visual-aria/">Visual ARIA Firefox Extension</a>
                        </li>
                        <li>
                            <a target="ext" href="https://github.com/AccDC/visual-aria">Visual ARIA on GitHub</a>
                        </li>
                        <li>
                            <a target="ext" href="http://whatsock.com/training/matrices/">ARIA Role Conformance Matrices</a>
                        </li>
                        <li>
                            <a target="ext" href="http://whatsock.com/training/">Accessibility Tree Training Guide</a>
                        </li>
                    </ul>
                </div>
                <div class="flex-item">
                    <h2>Acknowledgements</h2>
                    <ul class="list--horizontal">
                        <li>
                            Author and developer:
                            <a target="ext" href="https://www.linkedin.com/in/bgaraventa">Bryan Garaventa</a>
                        </li>
                        <li>
                            Website designer:
                            <a target="ext" href="http://gericci.me/">Angela Ricci</a>
                        </li>
                        <li>
                            Style and markup editor:
                            <a target="ext" href="https://www.linkedin.com/in/laurence-lewis-77520365/">Laurence Lewis</a>
                        </li>
                    </ul>
                </div>
            </div>
        </footer>
    </div>
</body>

<script async type="text/javascript" src="http://api.whatsock.com/accdc-updates.js?4x=template"></script>

</html>